blueprint:
  name: Another Light Blueprint Automation
  description:
    "Another Light Blueprint-Automation is my take on Light Profiles with Automations. ;\n - Bright.
    \    - (For Day time & Events, I need to be Awake; Bright eyed & bushy tailed).\n
    - Dimmed      - (For after sunset & before sunrise when i'm (still) thinking about
    bed, but I will want to be able to read the Funny pages).\n - Night-Light - (For
    bed/sleep time, & you don't want to wake  everyone else up, but you still want
    to see in an emergency; how to get to the Fridge)\n - Colour-Loop -  (Was to be
    Aurora-Australis, but color-loop is easier to remember).\n - Circadian   -  (For
    the rest of the house at night, & to get everyone in sync @ night with you).\n
    - Adaptive    -  (This works really well with a bed/sleep input_boolean).\n -
    Random      -  (A Sorely missed replacement to the light effect).\n - Custom      -
    \ (Utilise this when using scenes & applying custom colour effects).\n - Flash
    \      -  (works great in conjunction with Alarm Panel Automations).\n\n So thus,
    will be known as; Adaptive Lighting with color-loop Blueprint-Script V.2.0.2.1
    the fith year, from hence forth.\n (effect; Marketing/Advertising/Publicity :-D).\n\n
    \   - A PREREQUISITE of an input_select { Dropdown } with the desired above Profile/s
    (words) added is required. \n    - A PREREQUISITE of an input_boolean { Toggle
    } is reqired for Adaptive Profile Night-Light to work.\n    Go to Settings > Devices
    & Services > Helpers > Create Helper > { Dropdown } or { Toggle }.\n    & I'm
    assuming you already have some Lights that you wanted to add.\n\n Designed to
    be used with A Automation-Script, & that decides IF & WHEN too turn the Light/s
    On (by calling this script) & Off (by any means you see fit).\n Replace Another
    in the name of this script with the name of room/area/device/entity  (E.g. Office)
    light/s, this script is intended to turn_on [for convenience]."
  source_url: https://github.com/DefenestrateIT/Home-Assistant/blob/0d434b4ab5c98489436afccdfbac77268934862e/Another%20Light%20Blueprint%20Automation.yaml
  domain: automation

  input:
    target_lights:
      name: Targeted Lights
      description: The Lights this Script is Targeted at.
      selector:
        target:
          entity:
            domain: light
    profile_input_select:
      name: Profile input_select (Dropdown)
      description: The Profile the Targeted Light/s will comform to.
      selector:
        entity:
          domain: input_select
          multiple: false
    light_switch:
      name: Light Switch
      description: On, Off, Auto 'input_select' Switch.
      selector:
        entity:
          domain: input_select
          multiple: false
    profile_adaptive_input_switch:
      name: Profile - Adaptive - input_boolean (Toggle)
      description:
        The Adaptive Profile Night-Light Time Switch, is used to switch
        the Night-Light profile on.
      selector:
        entity:
          domain: input_boolean
          multiple: false
    motion_sensor:
      name: Motion Sensor
      description: The motion sensor that triggeres this automation.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
          multiple: false
    motion_cleared:
      name: Motion Cleared delay Time
      description: The Clear Delay Time.
      default: 15
      selector:
        number:
          min: 0.0
          max: 60.0
          mode: slider
          step: 1.0
    automations_off:
      name: Automations Off ( Toggle { Optional })
      description: Because I like to have A global Automations off Switch.
      selector:
        entity:
          domain: input_boolean
          multiple: false
    profile_circadian_bed_time:
      name: Profile - Circadian - Bed Time
      description:
        The Circadian Profile Night-Light Time, is used as a time to transition
        to Night Light.
      default: "22:30:00"
      selector:
        time: {}
    profile_circadian_wake_up_time:
      name: Profile - Circadian - Wake Up Time
      description:
        The Circadian Profile Wake Up Time, is used as a time to transition
        to Dimmed or Bright Light; depending on Sunrise time.
      default: "6:30:00"
      selector:
        time: {}
    transition_on:
      name: Turn On Light Transition Time
      description:
        The Light.Turn_On Transition Time, for when a Light is off & is
        being turned on.
      default: 0
      selector:
        number:
          min: 0.0
          max: 300.0
          mode: slider
          step: 1.0
    transition_off:
      name: Turn Off Light Transition Time
      description: The Light.Turn_Off Transition Time.
      default: 30
      selector:
        number:
          min: 0.0
          max: 300.0
          mode: slider
          step: 1.0
    transition_change:
      name: Change Light Transition Time
      description:
        The Light.Turn_On Transition Time, is used when the lights are
        already on & the profile is being changed.
      default: 90
      selector:
        number:
          min: 0.0
          max: 300.0
          mode: slider
          step: 1.0
    profile_colour_loop_transition_time:
      name: Profile - Colour Loop - Transition Time
      description:
        The Colour Loop Profile Light.Turn_On Transition Time between colour
        changes.
      default: 3
      selector:
        number:
          min: 1.0
          max: 300.0
          mode: slider
          step: 1.0
    flash_repeat:
      name: Profile - Flash - Repeat Time
      description:
        The Light.Turn_On Transition Time between Flashes (Not as good
        as i would like but uses the Flash effect to protect lights).
      default: 2
      selector:
        number:
          min: 2.0
          max: 300.0
          mode: slider
          step: 1.0
    sun_before_offset:
      name: Sunrise - Offset
      description: Offset the sunrise time.
      default: "1:00:00"
      selector:
        time: {}
    sun_after_offset:
      name: Sunset - Offset
      description: Offset the sunset time.
      default: "-1:00:00"
      selector:
        time: {}
    profile_bright_color_temp:
      name: Profile - Bright - Colour Tempature
      description: The Bright Profile light Colour-Tempature.
      default: 153
      selector:
        color_temp: {}
    profile_bright_brightness:
      name: Profile - Bright - brightness
      description: The Bright Profile light brightness.
      default: 255
      selector:
        number:
          min: 0.0
          max: 255.0
          mode: slider
          step: 1.0
    profile_dimmed_color_temp:
      name: Profile - Dimmed - Colour Tempature
      description: The Dimmed Profile light Colour-Tempature.
      default: 400
      selector:
        color_temp: {}
    profile_dimmed_brightness:
      name: Profile - Dimmed - Brightness
      description: The Dimmed Profile light brightness.
      default: 175
      selector:
        number:
          min: 0.0
          max: 255.0
          mode: slider
          step: 1.0
    profile_night_light_color_temp:
      name: Profile - Night Light - Colour Tempature
      description: The Night Light Profile light Colour-Tempature.
      default: 500
      selector:
        color_temp: {}
    profile_night_light_brightness:
      name: Profile - Night Light - Brightness
      description: The Night Light Profile light brightness.
      default: 15
      selector:
        number:
          min: 0.0
          max: 255.0
          mode: slider
          step: 1.0

variables:
  lights: !input target_lights
  entities: >
    {%- set ns = namespace(ret=[]) %}
    {%- for key in ['device_id', 'area_id', 'entity_id'] %}
      {%- set items = lights.get(key, [])  %}
      {%- if items %}
        {%- set items = [ items ] if items is string else items %}
        {%- set filt = key.split('_') | first %}
        {%- set items = items if filt == 'entity' else items | map(filt ~ '_entities') | sum(start=[]) %}
        {%- set ns.ret = ns.ret + [ items ] %}
      {%- endif %}
    {%- endfor %}
    {{ ns.ret | sum(start=[]) }}
  filtered: "{{ entities | select( 'search' , '^light' ) }}"
  lights_on: "{{ filtered | select('is_state', 'on') | list | count > 0 }}"
  transition_on: !input transition_on
  transition_change: !input transition_change
  transition: "{% if lights_on %} {{ transition_change }} {% else %} {{ transition_on }} {%endif%}"
  automations_off: !input automations_off

trigger:
  - platform: state
    entity_id: !input motion_sensor
    to: "on"
    id: Motion-Detected
  - platform: state
    entity_id: !input motion_sensor
    to: "off"
    id: Motion-cleared
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - platform: state
    entity_id: !input light_switch
    id: Light-Change
  - platform: state
    entity_id: !input profile_input_select
    id: Light-Change

condition:
  - condition: template
    value_template: "{{ automations_off }}"

action:
  - choose:
      - conditions:
          - condition: or
            conditions:
              - condition: state
                entity_id: !input light_switch
                state: "Off"
              - condition: and
                conditions:
                  - condition: state
                    entity_id: !input light_switch
                    state: Auto
                  - condition: trigger
                    id: Motion-Cleared
        sequence:
          - service: light.turn_off
            data:
              transition: !input transition_off
            target: !input lights
      - conditions:
          - condition: or
            conditions:
              - condition: state
                entity_id: !input light_switch
                state: "On"
              - condition: and
                conditions:
                  - condition: state
                    entity_id: !input light_switch
                    state: Auto
                  - condition: trigger
                    id: Motion-Detected
              - condition: and
                conditions:
                  - condition: trigger
                    id: Light-Change
                  - condition: template
                    value_template: "{{ lights_on }}"
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input profile_input_select
                    state: Bright
                sequence:
                  - service: light.turn_on
                    data:
                      color_temp: !input profile_bright_color_temp
                      brightness: !input profile_bright_brightness
                      transition: "{{ transition }}"
                    target: !input target_lights
              - conditions:
                  - condition: state
                    entity_id: !input profile_input_select
                    state: Dimmed
                sequence:
                  - service: light.turn_on
                    data:
                      color_temp: !input profile_dimmed_color_temp
                      brightness: !input profile_dimmed_brightness
                      transition: "{{ transition }}"
                    target: !input target_lights
              - conditions:
                  - condition: state
                    entity_id: !input profile_input_select
                    state: Night-Light
                sequence:
                  - service: light.turn_on
                    data:
                      color_temp: !input profile_night_light_color_temp
                      brightness: !input profile_night_light_brightness
                      transition: "{{ transition }}"
                    target: !input target_lights
              - conditions:
                  - condition: state
                    entity_id: !input profile_input_select
                    state: Random
                sequence:
                  - service: light.turn_on
                    data:
                      hs_color:
                        - "{{ range(360)|random }}"
                        - 100
                      transition: "{{ transition }}"
                    target: !input target_lights
              - conditions:
                  - condition: state
                    entity_id: !input profile_input_select
                    state: Colour-Loop
                sequence:
                  - service: light.turn_on
                    data:
                      hs_color:
                        - "{{ range(360)|random }}"
                        - 100
                      brightness_pct: 100
                      transition: !input profile_colour_loop_transition_time
                    target: !input target_lights
                  - repeat:
                      while:
                        - condition: template
                          value_template: "{{ lights_on }}"
                        - condition: state
                          entity_id: !input profile_input_select
                          state: Colour-Loop
                      sequence:
                        - service: light.turn_on
                          data:
                            hs_color:
                              - "{{ range(360)|random }}"
                              - 100
                            brightness_pct: 100
                            transition: !input profile_colour_loop_transition_time
                          target: !input target_lights
                        - delay:
                            hours: 0
                            minutes: 0
                            seconds: !input profile_colour_loop_transition_time
                            milliseconds: 0
              - conditions:
                  - condition: state
                    entity_id: !input profile_input_select
                    state: Flash
                sequence:
                  - service: light.turn_on
                    data:
                      transition: !input transition_on
                    target: !input target_lights
                  - repeat:
                      while:
                        - condition: template
                          value_template: "{{ lights_on }}"
                        - condition: state
                          entity_id: !input profile_input_select
                          state: Flash
                      sequence:
                        - service: light.turn_on
                          data:
                            flash: short
                          target: !input target_lights
                        - delay:
                            hours: 0
                            minutes: 0
                            seconds: !input flash_repeat
                            milliseconds: 0
              - conditions:
                  - condition: state
                    entity_id: !input profile_input_select
                    state: Circadian
                sequence:
                  - choose:
                      - conditions:
                          - condition: time
                            after: !input profile_circadian_bed_time
                            before: !input profile_circadian_wake_up_time
                        sequence:
                          - service: light.turn_on
                            data:
                              color_temp: !input profile_night_light_color_temp
                              brightness: !input profile_night_light_brightness
                              transition: "{{ transition }}"
                            target: !input target_lights
                      - conditions:
                          - condition: sun
                            before: sunset
                            after: sunrise
                            before_offset: !input sun_before_offset
                            after_offset: !input sun_after_offset
                        sequence:
                          - service: light.turn_on
                            data:
                              color_temp: !input profile_bright_color_temp
                              brightness: !input profile_bright_brightness
                              transition: "{{ transition }}"
                            target: !input target_lights
                    default:
                      - service: light.turn_on
                        data:
                          color_temp: !input profile_dimmed_color_temp
                          brightness: !input profile_dimmed_brightness
                          transition: "{{ transition }}"
                        target: !input target_lights
              - conditions:
                  - condition: state
                    entity_id: !input profile_input_select
                    state: Adaptive
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: !input profile_adaptive_input_switch
                            state: "on"
                        sequence:
                          - service: light.turn_on
                            data:
                              color_temp: !input profile_night_light_color_temp
                              brightness: !input profile_night_light_brightness
                              transition: "{{ transition }}"
                            target: !input target_lights
                      - conditions:
                          - condition: sun
                            before: sunset
                            after: sunrise
                            before_offset: !input sun_before_offset
                            after_offset: !input sun_after_offset
                        sequence:
                          - service: light.turn_on
                            data:
                              color_temp: !input profile_bright_color_temp
                              brightness: !input profile_bright_brightness
                              transition: "{{ transition }}"
                            target: !input target_lights
                    default:
                      - service: light.turn_on
                        data:
                          color_temp: !input profile_dimmed_color_temp
                          brightness: !input profile_dimmed_brightness
                          transition: "{{ transition }}"
                        target: !input target_lights
            default:
              - service: light.turn_on
                data:
                  transition: "{{ transition }}"
                target: !input target_lights
